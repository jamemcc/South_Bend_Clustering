color = profile_colors[3],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 3",
label = "Profile 3") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 4,],
color = profile_colors[4],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 4",
label = "Profile 4") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 5,],
color = profile_colors[5],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 5",
label = "Profile 5") %>%
addLegend(pal = profile_block_pal,
values = block_shapes_profile$Profile) %>%
addLayersControl(overlayGroups = c("Profile 1", "Profile 2", "Profile 3",
"Profile 4", "Profile 5"),
options = layersControlOptions(collapsed = FALSE),
position = "topleft")
View(neighborhoods)
View(neighborhoods)
block_shapes_profile <- block_shapes %>%
inner_join(minus_margins_block, by = "NAME") %>%
select(NAME, `Block Group`, `Census Tract`,
Profile = cluster, geometry)
profile_block_pal <- colorFactor("Dark2", block_shapes$Profile)
profile_colors <- profile_block_pal(1:5)
block_shapes_profile$`Block Group` <- str_remove(block_shapes_profile$`Block Group`,
"Block Group ")
block_shapes_profile$`Census Tract` <- str_remove(block_shapes_profile$`Census Tract`,
"Census Tract ")
block_shapes_profile$name_popup <- paste0("<b>Profile: </b>",
block_shapes_profile$Profile,
"<br><b>Census Tract: </b>",
block_shapes_profile$`Census Tract`,
"<br><b>Block Group: </b>",
block_shapes_profile$`Block Group`)
leaflet() %>%
addTiles() %>%
addPolygons(data = neighborhoods,
color = "black",
fillOpacity = 0,
opacity = 2,
weight = .5,
group = "Neighborhoods",
label = ~Name) %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 1,],
color = profile_colors[1],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 1",
label = "Profile 1") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 2,],
color = profile_colors[2],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 2",
label = "Profile 2") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 3,],
color = profile_colors[3],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 3",
label = "Profile 3") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 4,],
color = profile_colors[4],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 4",
label = "Profile 4") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 5,],
color = profile_colors[5],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 5",
label = "Profile 5") %>%
addLegend(pal = profile_block_pal,
values = block_shapes_profile$Profile) %>%
addLayersControl(overlayGroups = c("Profile 1", "Profile 2", "Profile 3",
"Profile 4", "Profile 5"),
options = layersControlOptions(collapsed = FALSE),
position = "topleft")
block_shapes_profile <- block_shapes %>%
inner_join(minus_margins_block, by = "NAME") %>%
select(NAME, `Block Group`, `Census Tract`,
Profile = cluster, geometry)
profile_block_pal <- colorFactor("Dark2", block_shapes$Profile)
profile_colors <- profile_block_pal(1:5)
block_shapes_profile$`Block Group` <- str_remove(block_shapes_profile$`Block Group`,
"Block Group ")
block_shapes_profile$`Census Tract` <- str_remove(block_shapes_profile$`Census Tract`,
"Census Tract ")
block_shapes_profile$name_popup <- paste0("<b>Profile: </b>",
block_shapes_profile$Profile,
"<br><b>Census Tract: </b>",
block_shapes_profile$`Census Tract`,
"<br><b>Block Group: </b>",
block_shapes_profile$`Block Group`)
leaflet() %>%
addTiles() %>%
addPolygons(data = neighborhoods,
color = "black",
fillOpacity = 0,
opacity = 2,
weight = .5,
group = "Neighborhoods",
label = ~Name) %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 1,],
color = profile_colors[1],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 1") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 2,],
color = profile_colors[2],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 2") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 3,],
color = profile_colors[3],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 3") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 4,],
color = profile_colors[4],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 4") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 5,],
color = profile_colors[5],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 5") %>%
addLegend(pal = profile_block_pal,
values = block_shapes_profile$Profile) %>%
addLayersControl(overlayGroups = c("Profile 1", "Profile 2", "Profile 3",
"Profile 4", "Profile 5"),
options = layersControlOptions(collapsed = FALSE),
position = "topleft")
block_shapes_profile <- block_shapes %>%
inner_join(minus_margins_block, by = "NAME") %>%
select(NAME, `Block Group`, `Census Tract`,
Profile = cluster, geometry)
profile_block_pal <- colorFactor("Dark2", block_shapes$Profile)
profile_colors <- profile_block_pal(1:5)
block_shapes_profile$`Block Group` <- str_remove(block_shapes_profile$`Block Group`,
"Block Group ")
block_shapes_profile$`Census Tract` <- str_remove(block_shapes_profile$`Census Tract`,
"Census Tract ")
block_shapes_profile$name_popup <- paste0("<b>Profile: </b>",
block_shapes_profile$Profile,
"<br><b>Census Tract: </b>",
block_shapes_profile$`Census Tract`,
"<br><b>Block Group: </b>",
block_shapes_profile$`Block Group`)
leaflet() %>%
addTiles() %>%
addPolygons(data = neighborhoods,
color = "black",
fillOpacity = .4,
opacity = 1,
weight = 2,
group = "Neighborhoods",
label = ~Name) %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 1,],
color = profile_colors[1],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 1") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 2,],
color = profile_colors[2],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 2") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 3,],
color = profile_colors[3],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 3") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 4,],
color = profile_colors[4],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 4") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 5,],
color = profile_colors[5],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 5") %>%
addLegend(pal = profile_block_pal,
values = block_shapes_profile$Profile) %>%
addLayersControl(overlayGroups = c("Profile 1", "Profile 2", "Profile 3",
"Profile 4", "Profile 5"),
options = layersControlOptions(collapsed = FALSE),
position = "topleft")
block_shapes_profile <- block_shapes %>%
inner_join(minus_margins_block, by = "NAME") %>%
select(NAME, `Block Group`, `Census Tract`,
Profile = cluster, geometry)
profile_block_pal <- colorFactor("Dark2", block_shapes$Profile)
profile_colors <- profile_block_pal(1:5)
block_shapes_profile$`Block Group` <- str_remove(block_shapes_profile$`Block Group`,
"Block Group ")
block_shapes_profile$`Census Tract` <- str_remove(block_shapes_profile$`Census Tract`,
"Census Tract ")
block_shapes_profile$name_popup <- paste0("<b>Profile: </b>",
block_shapes_profile$Profile,
"<br><b>Census Tract: </b>",
block_shapes_profile$`Census Tract`,
"<br><b>Block Group: </b>",
block_shapes_profile$`Block Group`)
leaflet() %>%
addTiles() %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 1,],
color = profile_colors[1],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 1") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 2,],
color = profile_colors[2],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 2") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 3,],
color = profile_colors[3],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 3") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 4,],
color = profile_colors[4],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 4") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 5,],
color = profile_colors[5],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 5") %>%
addPolygons(data = neighborhoods,
color = "black",
fillOpacity = .4,
opacity = 1,
weight = 2,
group = "Neighborhoods",
label = ~Name) %>%
addLegend(pal = profile_block_pal,
values = block_shapes_profile$Profile) %>%
addLayersControl(overlayGroups = c("Profile 1", "Profile 2", "Profile 3",
"Profile 4", "Profile 5"),
options = layersControlOptions(collapsed = FALSE),
position = "topleft")
block_shapes_profile <- block_shapes %>%
inner_join(minus_margins_block, by = "NAME") %>%
select(NAME, `Block Group`, `Census Tract`,
Profile = cluster, geometry)
profile_block_pal <- colorFactor("Dark2", block_shapes$Profile)
profile_colors <- profile_block_pal(1:5)
block_shapes_profile$`Block Group` <- str_remove(block_shapes_profile$`Block Group`,
"Block Group ")
block_shapes_profile$`Census Tract` <- str_remove(block_shapes_profile$`Census Tract`,
"Census Tract ")
block_shapes_profile$name_popup <- paste0("<b>Profile: </b>",
block_shapes_profile$Profile,
"<br><b>Census Tract: </b>",
block_shapes_profile$`Census Tract`,
"<br><b>Block Group: </b>",
block_shapes_profile$`Block Group`)
leaflet() %>%
addTiles() %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 1,],
color = profile_colors[1],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 1") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 2,],
color = profile_colors[2],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 2") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 3,],
color = profile_colors[3],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 3") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 4,],
color = profile_colors[4],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 4") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 5,],
color = profile_colors[5],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 5") %>%
addPolygons(data = neighborhoods,
color = "black",
fillOpacity = .4,
opacity = 1,
weight = 2,
group = "Neighborhoods",
label = ~Name) %>%
addLegend(pal = profile_block_pal,
values = block_shapes_profile$Profile) %>%
addLayersControl(overlayGroups = c("Profile 1", "Profile 2", "Profile 3",
"Profile 4", "Profile 5", "Neighborhoods"),
options = layersControlOptions(collapsed = FALSE),
position = "topleft")
datatable(transposed_center_block)
gOverlaps(block_shapes_profile, neighborhoods)
gOverlaps(sf::as_Spatial(block_shapes_profile, IDs = block_shapes_profile$NAME),  neighborhoods)
gOverlaps(sf::as_Spatial(block_shapes_profile, IDs = block_shapes_profile$NAME), neighborhoods)
gOverlaps(sf::as_Spatial(block_shapes_profile, IDs = block_shapes_profile$NAME), neighborhoods, byid = T)
gOverlaps(neighborhoods, sf::as_Spatial(block_shapes_profile, IDs = block_shapes_profile$NAME), byid = T)
overlap_matrix <- gOverlaps(neighborhoods,
sf::as_Spatial(block_shapes_profile,
IDs = block_shapes_profile$NAME),
byid = T)
overlap_matrix <- gOverlaps(neighborhoods,
sf::as_Spatial(block_shapes_profile,
IDs = block_shapes_profile$NAME),
byid = T)
neighborhoods[1]
overlap_matrix <- gOverlaps(neighborhoods,
sf::as_Spatial(block_shapes_profile,
IDs = block_shapes_profile$NAME),
byid = T)
as.data.frame(neighborhoods)
overlap_matrix <- gOverlaps(neighborhoods,
sf::as_Spatial(block_shapes_profile,
IDs = block_shapes_profile$NAME),
byid = T)
as.data.frame(neighborhoods$Name)
overlap_matrix <- gOverlaps(neighborhoods,
sf::as_Spatial(block_shapes_profile,
IDs = block_shapes_profile$NAME),
byid = T)
str(neighborhoods$Name)
block_shapes_profile[, c("NAME", "Profile")]
as.tibble(block_shapes_profile[, c("NAME", "Profile")])
overlap_matrix <- gOverlaps(neighborhoods,
sf::as_Spatial(block_shapes_profile,
IDs = block_shapes_profile$NAME),
byid = T)
block_tibble <- as.tibble(block_shapes_profile) %>%
select(-geometry)
neighborhood_touches <- list()
for (i in 1:length(neighborhoods$Name)) {
}
block_tibble[overlap_matrix[, 1], ]
overlap_matrix <- gOverlaps(neighborhoods,
sf::as_Spatial(block_shapes_profile,
IDs = block_shapes_profile$NAME),
byid = T)
block_tibble <- as.tibble(block_shapes_profile) %>%
select(-geometry, name_popup)
neighborhood_touches <- list()
for (i in 1:length(neighborhoods$Name)) {
neighborhood_touches[[i]] <- block_tibble[overlap_matrix[, i], ]
}
View(neighborhood_touches)
View(neighborhood_touches)
overlap_matrix <- gOverlaps(neighborhoods,
sf::as_Spatial(block_shapes_profile,
IDs = block_shapes_profile$NAME),
byid = T)
block_tibble <- as.tibble(block_shapes_profile) %>%
select(-geometry, name_popup)
neighborhood_touches <- list()
for (i in 1:length(neighborhoods$Name)) {
neighborhood_touches[[i]] <- block_tibble[overlap_matrix[, i], ]
names(neighborhood_touches[i]) <- neighborhoods$Name[i]
}
View(neighborhood_touches)
View(neighborhood_touches)
datatable(transposed_center_block)
overlap_matrix <- gOverlaps(neighborhoods,
sf::as_Spatial(block_shapes_profile,
IDs = block_shapes_profile$NAME),
byid = T)
block_tibble <- as.tibble(block_shapes_profile) %>%
select(-geometry, name_popup)
neighborhood_touches <- list()
for (i in 1:length(neighborhoods$Name)) {
neighborhood_touches[[i]] <- block_tibble[overlap_matrix[, i], ]
}
names(neighborhood_touches) <- neighborhoods$Name
View(neighborhood_touches)
View(neighborhood_touches)
block_shapes_profile <- block_shapes %>%
inner_join(minus_margins_block, by = "NAME") %>%
select(NAME, `Block Group`, `Census Tract`,
Profile = cluster, geometry)
profile_block_pal <- colorFactor("Dark2", block_shapes$Profile)
profile_colors <- profile_block_pal(1:5)
block_shapes_profile$`Block Group` <- str_remove(block_shapes_profile$`Block Group`,
"Block Group ")
block_shapes_profile$`Census Tract` <- str_remove(block_shapes_profile$`Census Tract`,
"Census Tract ")
block_shapes_profile$name_popup <- paste0("<b>Profile: </b>",
block_shapes_profile$Profile,
"<br><b>Census Tract: </b>",
block_shapes_profile$`Census Tract`,
"<br><b>Block Group: </b>",
block_shapes_profile$`Block Group`)
leaflet() %>%
addTiles() %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 1,],
color = profile_colors[1],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 1") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 2,],
color = profile_colors[2],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 2") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 3,],
color = profile_colors[3],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 3") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 4,],
color = profile_colors[4],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 4") %>%
addPolygons(data = block_shapes_profile[block_shapes_profile$Profile == 5,],
color = profile_colors[5],
fillOpacity = .75,
opacity = 1,
popup = ~name_popup,
group = "Profile 5") %>%
addPolygons(data = neighborhoods[neighborhoods$Name == "Oliver Gateway", ],
color = "black",
fillOpacity = .4,
opacity = 1,
weight = 2,
group = "Neighborhoods",
label = ~Name) %>%
addLegend(pal = profile_block_pal,
values = block_shapes_profile$Profile) %>%
addLayersControl(overlayGroups = c("Profile 1", "Profile 2", "Profile 3",
"Profile 4", "Profile 5", "Neighborhoods"),
options = layersControlOptions(collapsed = FALSE),
position = "topleft")
overlap_matrix <- gOverlaps(neighborhoods,
sf::as_Spatial(block_shapes_profile,
IDs = block_shapes_profile$NAME),
byid = T)
touches_matrix <- gTouches(neighborhoods,
sf::as_Spatial(block_shapes_profile,
IDs = block_shapes_profile$NAME),
byid = T)
block_tibble <- as.tibble(block_shapes_profile) %>%
select(-geometry, name_popup)
neighborhood_touches <- list()
for (i in 1:length(neighborhoods$Name)) {
neighborhood_touches[[i]] <- block_tibble[overlap_matrix[, i], ]
}
names(neighborhood_touches) <- neighborhoods$Name
overlap_matrix <- gOverlaps(neighborhoods,
sf::as_Spatial(block_shapes_profile,
IDs = block_shapes_profile$NAME),
byid = T)
touches_matrix <- gTouches(neighborhoods,
sf::as_Spatial(block_shapes_profile,
IDs = block_shapes_profile$NAME),
byid = T)
block_tibble <- as.tibble(block_shapes_profile) %>%
select(-geometry, name_popup)
neighborhood_touches <- list()
for (i in 1:length(neighborhoods$Name)) {
neighborhood_touches[[i]] <- block_tibble[touches_matrix[, i], ]
}
names(neighborhood_touches) <- neighborhoods$Name
View(neighborhood_touches)
View(neighborhood_touches)
