library(tidycensus)
library(tidyverse)
library(ggmap)
library(viridis)
library(leaflet)
library(ZillowR)
library(rgdal)
library(lubridate)
library(scales)
library(lubridate)
#5-year American Community Survey 2015
#Info Here: https://walkerke.github.io/tidycensus/
acs2017Variables <- load_variables(2017, "acs5", cache = TRUE)
load("EDA Data.RData")
leaflet() %>%
addTiles() %>%
addPolygons(data = stJoesTract,
color = "black",
opacity = .6,
weight = 2,
popup = ~NAME,
group = "Census Tract") %>%
addPolygons(data = stJoesBlockGroup,
color = "blue",
opacity = .6,
weight = 2,
popup = ~NAME,
group = "Census Block Group") %>%
addPolygons(data = stJoesZillow,
color = "red",
opacity = .6,
weight = 2,
group = "Zillow") %>%
addLayersControl(
baseGroups = c("Census Tract", "Census Block Group", "Zillow"),
options = layersControlOptions(collapsed = FALSE)
)
populationPal <- colorNumeric("Blues", stJoesTract$`Total PopulationE`)
totalHousingPal <- colorNumeric("Blues", stJoesTract$`Total Housing UnitsE`)
totalRentalUnitsPal <- colorNumeric("Blues", stJoesTract$`Total Renter-Occupied UnitsE`)
incomePal <- colorNumeric("Blues", stJoesTract$`Med Family IncomeE`)
housingCostPal <- colorNumeric("Blues", stJoesTract$`Med Monthly Housing CostsE`)
rentIncomePal <- colorNumeric("Blues", stJoesTract$`Med Rent/Income%E`)
mapPopup <- paste0("<b>",
stJoesTract$NAME,
"</b><br>Total Population: ",
stJoesTract$`Total PopulationE`,
"<br>Total Housing Units: ",
stJoesTract$`Total Housing UnitsE`,
"<br> Median Family Income: $",
stJoesTract$`Med Family IncomeE`,
"<br>Total Rental Units: ",
stJoesTract$`Total Renter-Occupied UnitsE`,
"<br>Median Monthly Housing Costs: $",
stJoesTract$`Med Monthly Housing CostsE`,
"<br>Median Percent of Income Spent on Rent: ",
stJoesTract$`Med Rent/Income%E`, "%")
leaflet() %>%
addTiles() %>%
addPolygons(data = stJoesTract,
color = ~populationPal(`Total PopulationE`),
opacity = .6,
weight = 2,
popup = mapPopup,
group = "Total Population") %>%
addLegend(title = "Population",
position = "bottomleft",
pal = populationPal,
values = stJoesTract$`Total PopulationE`,
group = "Total Population") %>%
addPolygons(data = stJoesTract,
color = ~totalHousingPal(`Total Housing UnitsE`),
opacity = .6,
weight = 2,
popup = mapPopup,
group = "Total Housing Units") %>%
addLegend(title = "Housing Units",
position = "bottomleft",
pal = totalHousingPal,
values = stJoesTract$`Total Housing UnitsE`,
group = "Total Housing Units") %>%
addPolygons(data = stJoesTract,
color = ~incomePal(`Med Family IncomeE`),
opacity = .6,
weight = 2,
popup = mapPopup,
group = "Median Family Income") %>%
addLegend(title = "Family Income",
position = "bottomleft",
pal = incomePal,
values = stJoesTract$`Med Family IncomeE`,
group = "Median Family Income") %>%
addPolygons(data = stJoesTract,
color = ~totalRentalUnitsPal(`Total Renter-Occupied UnitsE`),
opacity = .6,
weight = 2,
popup = mapPopup,
group = "Total Rental Units") %>%
addLegend(title = "Rental Units",
position = "bottomleft",
pal = totalRentalUnitsPal,
values = stJoesTract$`Total Renter-Occupied UnitsE`,
group = "Total Rental Units") %>%
addPolygons(data = stJoesTract,
color = ~housingCostPal(`Med Monthly Housing CostsE`),
opacity = .6,
weight = 2,
popup = mapPopup,
group = "Median Housing Costs") %>%
addLegend(title = "Housing Costs",
position = "bottomleft",
pal = housingCostPal,
values = stJoesTract$`Med Monthly Housing CostsE`,
group = "Median Housing Costs") %>%
addPolygons(data = stJoesTract,
color = ~rentIncomePal(`Med Rent/Income%E`),
opacity = .6,
weight = 2,
popup = mapPopup,
group = "Median Rent/Income") %>%
addLegend(title = "Rent/Income",
position = "bottomleft",
pal = rentIncomePal,
values = stJoesTract$`Med Rent/Income%E`,
group = "Median Rent/Income") %>%
addLayersControl(
overlayGroups = c("Total Population", "Total Housing Units", "Median Family Income", "Total Rental Units",
"Median Housing Costs", "Median Rent/Income"),
options = layersControlOptions(collapsed = FALSE)
) %>%
hideGroup(c("Total Housing Units", "Median Family Income", "Total Rental Units", "Median Housing Costs",
"Median Rent/Income"))
mortgageCosts <- stJoesTract %>%
select(-geometry) %>%
as.tibble() %>%
select(NAME, `Med Owner Costs-MortgageE`, `Med Owner Costs-No MortgageE`) %>%
gather(key = "Mortgage Status", value = "Cost", `Med Owner Costs-MortgageE`:`Med Owner Costs-No MortgageE`) %>%
mutate(`Mortgage Status` = ifelse(`Mortgage Status` == "Med Owner Costs-MortgageE", "Mortgage", "No Mortgage"))
ggplot(
data = mortgageCosts,
aes(x = `Mortgage Status`, y = Cost)
) + geom_boxplot() + labs(x = "Mortgage Status",
title = "Monthly Home Ownership Costs") +
scale_y_continuous(labels = dollar_format())
neighborhoodRent <- read.csv("C:/Users/kost1/Documents/GitHub/DS-Now-Final-Project/Data Sources/Neighborhood Rent Prices-Zillow.csv",
stringsAsFactors = F) %>%
filter(State == "IN") %>%
filter(CountyName == "Saint Joseph County")
longRentZillow <- neighborhoodRent %>%
gather(key = DateString,
value = "ZRI",
-c(RegionID, RegionName, City, State, Metro, CountyName, SizeRank))
tidyRentZillow <- longRentZillow %>%
mutate(DateString = str_sub(DateString, start = 2)) %>%
mutate(Date = as.Date(paste0(DateString, ".1"), "%Y.%m.%d") + months(1) - days(1))
ggplot(
data = tidyRentZillow,
aes(x = Date, y = ZRI, color = RegionName)
) + geom_point() + scale_y_continuous(labels = dollar_format()) +
labs(x = "Date", y = "Zillow Rent Index",
title = "Rent Over Time in South Bend Neighborhoods")
# Plot change over time, by state.
ggplot(
data = tidyRentZillow %>%
mutate(Month = factor(month(Date))),
aes(y = fct_rev(RegionName), x = ZRI)) +
labs(title = "Zillow | South Bend Rent Prices",
subtitle = "2010 - 2017",
x = "", y = "",
colour = "#E0E0E0") +
geom_point(shape = 20, alpha = 0.6, size = 5, aes(color = Month)) +
scale_color_discrete(l = 45, h = c(30, 330)) +
theme(axis.ticks.y = element_blank(),
plot.title = element_text(size = 15, face = c("bold","italic")),
axis.text.x = element_text(size = 9),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.position = "none",
plot.subtitle = element_text(size = 10),
plot.background = element_rect(fill = "white"), # background color
panel.grid.major.y = element_line(color = "#E0E0E0"), # horizontal line color
panel.background = element_rect(fill = "white")) +
scale_x_continuous(breaks = waiver()) #sets # of labels on x axis
homeValueIndex <- read.csv("C:/Users/kost1/Documents/GitHub/DS-Now-Final-Project/Data Sources/Zillow Home Value Index - All Homes.csv",
stringsAsFactors = F) %>%
filter(State == "IN") %>%
filter(CountyName == "Saint Joseph County")
longValueZillow <- homeValueIndex %>%
gather(key = DateString,
value = "ZHVI",
-c(RegionID, RegionName, City, State, Metro, CountyName, SizeRank))
tidyValueZillow <- longValueZillow %>%
mutate(DateString = str_sub(DateString, start = 2)) %>%
mutate(Date = as.Date(paste0(DateString, ".1"), "%Y.%m.%d") + months(1) - days(1))
ggplot(
data = tidyValueZillow,
aes(x = Date, y = ZHVI, color = RegionName)
) + geom_point() + scale_y_continuous(labels = dollar_format()) +
labs(x = "Date", y = "Zillow Home Value Index",
title = "Home Values Over Time in South Bend Neighborhoods")
homeSales <- read.csv("C:/Users/kost1/Documents/GitHub/DS-Now-Final-Project/Data Sources/Sale_Counts_Seas_Adj_City.csv",
stringsAsFactors = F) %>%
filter(StateName == "Indiana") %>%
filter(RegionName == "South Bend")
longSalesZillow <- homeSales %>%
gather(key = DateString,
value = "Homes Sold",
-c(RegionID, RegionName, StateName, SizeRank))
tidySalesZillow <- longSalesZillow %>%
mutate(DateString = str_sub(DateString, start = 2)) %>%
mutate(Date = as.Date(paste0(DateString, ".1"), "%Y.%m.%d") + months(1) - days(1))
ggplot(
data = na.omit(tidySalesZillow),
aes(x = Date, y = `Homes Sold`)
) + geom_point() +
labs(x = "Date", y = "Homes",
title = "Homes Sold Over Time in South Bend")
bottomTier <- read.csv("C:/Users/kost1/Documents/GitHub/DS-Now-Final-Project/Data Sources/City/City_Zhvi_BottomTier.csv",
stringsAsFactors = F) %>%
filter(State == "IN") %>%
filter(Metro == "South Bend-Mishawaka")
middleTier <- read.csv("C:/Users/kost1/Documents/GitHub/DS-Now-Final-Project/Data Sources/City/City_Zhvi_MiddleTier.csv",
stringsAsFactors = F) %>%
filter(State == "IN") %>%
filter(Metro == "South Bend-Mishawaka")
topTier <- read.csv("C:/Users/kost1/Documents/GitHub/DS-Now-Final-Project/Data Sources/City/City_Zhvi_TopTier.csv",
stringsAsFactors = F) %>%
filter(State == "IN") %>%
filter(Metro == "South Bend-Mishawaka")
bottomZillow <- bottomTier %>%
gather(key = DateString,
value = "Zillow Housing Value Index",
-c(RegionID, RegionName, State, Metro, CountyName, SizeRank))
tidyBottomZillow <- bottomZillow %>%
mutate(DateString = str_sub(DateString, start = 2)) %>%
mutate(Date = as.Date(paste0(DateString, ".1"), "%Y.%m.%d") + months(1) - days(1))
ggplot(
data = na.omit(tidyBottomZillow),
aes(x = Date, y = `Zillow Housing Value Index`, color = RegionName)
) + geom_point() + scale_y_continuous(labels = dollar_format()) +
labs(x = "Date", y = "Zillow Housing Value Index",
title = "Bottom Tier Housing Values\nOver Time in South Bend Area",
color = "City")
2100*12*10
-0.8 + 0.3*5 + 0.5*2
round(exp(-0.8 + 0.3*5 + 0.5*2)/(1+exp(-0.8 + 0.3*5 + 0.5*2)), 2)
p <- exp(-1.5 + 0.4*4)/(1+exp(-1.5 + 0.4*4))
p
p/(1-p)
p2 <- exp(-1.5 + 0.4*5)/(1+exp(-1.5 + 0.4*5))
p2
p2/(1-p2)
p/(1-p) * exp(0.4)
library(faraway)
data("pima")
pima2 <- pima
pima2$glucose[pima2$glucose == 0] <- NA
pima2$diastolic[pima2$diastolic == 0] <- NA
pima2$triceps[pima2$triceps == 0] <- NA
pima2$insulin[pima2$insulin == 0] <- NA
pima2$bmi[pima2$bmi == 0] <- NA
pima2 <- na.omit(pima2)
sum(pima2$test == 1)
mod1 <- glm(test ~ bmi + age, family = binomial, data = pima2)
summary(mod1)
medbmi <- round(median(pima2$bmi), 2)
medage <- round(median(pima2$age), 2)
mod1_coef <- round(coef(mod1), 2)
logodds <- round(sum(mod1_coef * c(1, medbmi, medage)), 2)
exp(logodds)/(1+exp(logodds))
cdists <- cooks.distance(mod1)
max(cdists)
which.max(cdists)
pima2$age[which.max(cdists)]
pima2$bmi[which.max(cdists)]
pima3 <- pima2[-which.max(cdists), ]
mod_red <- glm(test ~ bmi + age, family = binomial, data = pima3)
summary(mod_red)
pnorm((-6.31 - 0)/0.78679, 0)
(-6.31 - 0)/0.78679
-6.31 + c(-1, 1)*qnorm(.975, lower.tail = F)
c(-1, 1)*qnorm(.975, lower.tail = F)
c(-1, 1)*qnorm(.025, lower.tail = F)
-6.31 + c(-1, 1)*qnorm(.025, lower.tail = F)
-6.31 + c(-1, 1)*qnorm(.975)
c(-1,1)*qnorm(.975)*2.222
seBhat <- qnorm(.975)/2.222
seBhat
Bhat <- 2.222*seBhat
Bhat + c(-1,1)*qnorm(.975)*seBhat
seBhat2 <- qnorm(.995)/2.222
seBhat2
Bhat2 <- 2.222*seBhat2
Bhat2 + c(-1,1)*qnorm(.975)*seBhat2
Bhat2 + c(-1,1)*qnorm(.995)*seBhat2
1*log(0.8) + (1-1)*log(1-0.8)
abs(1*log(0.8) + (1-1)*log(1-0.8))
pchisq(9, 4)
pchisq(9, 4, lower.tail = F)
data("aflatoxin")
View(aflatoxin)
mean(aflatoxin$total)
mod_bin <- glm(dose/total~tumor, family = binomial, weights = total)
mod_bin <- glm(dose/total~tumor, family = binomial, weights = total, data = aflatoxin)
summary(mod_bin)
mod_bin <- glm(dose~tumor, family = binomial, weights = total, data = aflatoxin)
summary(mod_bin)
mod_bin <- glm(tumor~dose, family = binomial, weights = total, data = aflatoxin)
mod_bin <- glm(tumor/total~dose, family = binomial, weights = total, data = aflatoxin)
summary(mod_bin)
library(dplyr)
pima2 %>%
group_by(age, bmi)
pima2 %>%
group_by(age, bmi) %>%
summarise(count = n())
pima2 %>%
group_by(age, bmi) %>%
summarise(count = n()) %>%
filter(count == 1)
pima2 %>%
group_by(age, bmi) %>%
summarise(count = n()) %>%
filter(count == 1) %>%
nrow(.)
data("wbca")
wbca %>%
group_by(BNucl, Thick, Chrom, UShap, USize) %>%
summarise(Count = n()) %>%
filter(Count < 5) %>%
nrow(.)
bin_wbca <- wbca %>%
group_by(BNucl, Thick, Chrom, UShap, USize) %>%
summarise(Count = n(), Class = sum(Class))
mod_wbca_bin <- glm(Class/Count ~ BNucl+Thick+Chrom+UShap+USize, weights = Class,
family = binomial, data = bin_wbca)
summary(mod_wbca_bin)
mod_wbca <- glm(Class/Count ~ BNucl+Thick+Chrom+UShap+USize,
family = binomial, data = wbca)
mod_wbca <- glm(Class ~ BNucl+Thick+Chrom+UShap+USize,
family = binomial, data = wbca)
summary(mod_wbca)
coef(mod_wbca)
wbca_coefs <- coef(mod_wbca)
summary(mod_wbca)
round(wbca_coefs, 2) + c(-1,1)*qnorm(.95)*0.096
round(wbca_coefs[2], 2) + c(-1,1)*qnorm(.95)*0.096
mod_red_wbca <- glm(Class ~ BNucl+Thick+Chrom,
family = binomial, data = wbca)
G_wbca <- mod_wbca$deviance - mod_red_wbca$deviance
G
G_wbca
G_wbca <- mod_red_wbca$deviance - mod_wbca$deviance
G_wbca
df_wbca <- length(coef(mod_wbca) - coef(mod_red_wbca))
df_wbca
df_wbca <- length(coef(mod_wbca)) - length(coef(mod_red_wbca))
df_wbca
pchisq(G_wbca, df_wbca)
pchisq(G_wbca, df_wbca, lower.tail = F)
data("beetle")
min(beetle$exposed)
mod_beetle <- glm(affected/exposed~conc, weights = exposed, family = binomial,
data = beetle)
mod_beetle$deviance
data("orings")
orings_grouped <- orings %>%
group_by(temp) %>%
summarize(Count = n(), damage = sum(damage))
mod_binomial <- glm(damage/Count ~ temp, family = binomial, weights = Count, data = orings_grouped)
orings_grouped <- orings %>%
group_by(temp) %>%
summarize(Count = n(), damage = sum(damage)) %>%
mutate(Count = Count*6)
mod_binomial <- glm(damage/Count ~ temp, family = binomial, weights = Count, data = orings_grouped)
summary(mod_binomial)
b_temp <- coef(mod_binomial)[2]
mod_binomial$coefficients
b_temp + c(-1, 1)*qnorm(.995)*0.05318
pnorm(b_temp/0.05318)
2*pnorm(b_temp/0.05318)
exp(1.5 + 0.5 * 2)
exp(0.5)
library(faraway)
library(MASS)
data("crabs")
crabs
#Fit Zero-inflated Poisson (ZIP) model
mod_zip <- zeroinfl(satell~width,data=crabs)
summary(mod_zip)
library(MASS)
library(glmbb)
library(pscl)
data("crabs")
#Fit Zero-inflated Poisson (ZIP) model
mod_zip <- zeroinfl(satell~width,data=crabs)
summary(mod_zip)
crabs[1,]
coef(mod_zip)
coef(mod_zip)[3:4] * c(1, 28.3)
exp(coef(mod_zip)[3:4] * c(1, 28.3))/(1 + exp(coef(mod_zip)[3:4] * c(1, 28.3)))
exp(sum(coef(mod_zip)[3:4] * c(1, 28.3)))/(1 + sum(coef(mod_zip)[3:4] * c(1, 28.3)))
summary(mod_zip)
crabs[1,]
exp(0.57380 + 0.03445 * 28.3)
exp(12.4229 + -0.5015 * 28.3)
setwd("~/GitHub/DS-Now-Final-Project")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/DS-Now-Final-Project")
library(tidycensus)
library(tidyverse)
library(leaflet)
load("clustering_work.RData")
load("census_shapefiles.RData")
block_group_map_data_bg <- blockGroupShapes %>%
left_join(filtered_bg, by = "NAME") %>%
mutate(Profile = kmeans_five_bg$cluster)
clusterPal_bg <- colorFactor("Blues", block_group_map_data_bg$Profile)
leaflet() %>%
addTiles() %>%
addPolygons(data = block_group_map_data_bg,
color = ~clusterPal_bg(Profile),
opacity = 1) %>%
addLegend(pal = clusterPal_bg,
values = block_group_map_data_bg$Profile)
block_group_map_data_bg <- blockGroupShapes %>%
left_join(filtered_bg, by = "NAME") %>%
mutate(Profile = kmeans_five_bg$cluster)
clusterPal_bg <- colorFactor("Set3", block_group_map_data_bg$Profile)
leaflet() %>%
addTiles() %>%
addPolygons(data = block_group_map_data_bg,
color = ~clusterPal_bg(Profile),
opacity = 1) %>%
addLegend(pal = clusterPal_bg,
values = block_group_map_data_bg$Profile)
block_group_map_data_bg <- blockGroupShapes %>%
left_join(filtered_bg, by = "NAME") %>%
mutate(Profile = kmeans_five_bg$cluster)
clusterPal_bg <- colorFactor("Set3", block_group_map_data_bg$Profile)
leaflet() %>%
addTiles() %>%
addPolygons(data = block_group_map_data_bg,
color = ~clusterPal_bg(Profile),
fillOpacity = .8,
opacity = 1) %>%
addLegend(pal = clusterPal_bg,
values = block_group_map_data_bg$Profile)
block_group_map_data_bg <- blockGroupShapes %>%
left_join(filtered_bg, by = "NAME") %>%
mutate(Profile = kmeans_five_bg$cluster)
clusterPal_bg <- colorFactor("Set3", block_group_map_data_bg$Profile)
leaflet() %>%
addTiles() %>%
addPolygons(data = block_group_map_data_bg,
color = ~clusterPal_bg(Profile),
fillOpacity = .75,
opacity = 1) %>%
addLegend(pal = clusterPal_bg,
values = block_group_map_data_bg$Profile)
block_group_map_data_bg <- blockGroupShapes %>%
left_join(filtered_bg, by = "NAME") %>%
mutate(Profile = kmeans_five_bg$cluster)
clusterPal_bg <- colorFactor("Set3", block_group_map_data_bg$Profile)
leaflet() %>%
addTiles() %>%
addPolygons(data = block_group_map_data_bg,
color = ~clusterPal_bg(Profile),
fillOpacity = .75,
opacity = 1,
popup = ~NAME) %>%
addLegend(pal = clusterPal_bg,
values = block_group_map_data_bg$Profile)
block_group_map_data_bg <- blockGroupShapes %>%
left_join(filtered_bg, by = "NAME") %>%
mutate(Profile = kmeans_five_bg$cluster)
clusterPal_bg <- colorFactor("Dark2", block_group_map_data_bg$Profile)
leaflet() %>%
addTiles() %>%
addPolygons(data = block_group_map_data_bg,
color = ~clusterPal_bg(Profile),
fillOpacity = .75,
opacity = 1,
popup = ~NAME) %>%
addLegend(pal = clusterPal_bg,
values = block_group_map_data_bg$Profile)
block_group_map_data_bg <- blockGroupShapes %>%
left_join(filtered_bg, by = "NAME") %>%
mutate(Profile = kmeans_five_bg$cluster)
clusterPal_bg <- colorFactor("Dark2", block_group_map_data_bg$Profile)
leaflet() %>%
addTiles() %>%
addPolygons(data = block_group_map_data_bg,
color = ~clusterPal_bg(Profile),
fillOpacity = .75,
opacity = 1,
popup = ~NAME) %>%
addLegend(pal = clusterPal_bg,
values = block_group_map_data_bg$Profile)
block_group_map_data_bg <- blockGroupShapes %>%
left_join(filtered_bg, by = "NAME") %>%
mutate(Profile = kmeans_five_bg$cluster)
clusterPal_bg <- colorFactor("Dark2", block_group_map_data_bg$Profile)
leaflet() %>%
addTiles() %>%
addPolygons(data = block_group_map_data_bg,
color = ~clusterPal_bg(Profile),
fillOpacity = .75,
opacity = 1,
popup = ~NAME) %>%
addLegend(pal = clusterPal_bg,
values = block_group_map_data_bg$Profile)
